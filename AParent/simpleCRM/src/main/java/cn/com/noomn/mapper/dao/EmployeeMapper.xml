<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.noomn.mapper.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.com.noomn.po.Employee">
    <id column="EMPLOYEE_ID" jdbcType="VARCHAR" property="employeeId" />
    <result column="DEPARTMENT_ID_EMPLOYEE" jdbcType="VARCHAR" property="departmentIdEmployee" />
    <result column="USERROLE_ID_EMPLOYEE" jdbcType="VARCHAR" property="userroleIdEmployee" />
    <result column="EMPLOYEE_USERNAME" jdbcType="VARCHAR" property="employeeUsername" />
    <result column="EMPLOYEE_PASSWORD" jdbcType="VARCHAR" property="employeePassword" />
    <result column="EMPLOYEE_NUMBER" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="EMPLOYEE_REAL_NAME" jdbcType="VARCHAR" property="employeeRealName" />
    <result column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
    <result column="EMPLOYEE_PHONE" jdbcType="VARCHAR" property="employeePhone" />
    <result column="EMPLOYEE_INIT" jdbcType="INTEGER" property="employeeInit" />
    <result column="EMPLOYEE_INSTRUCT" jdbcType="VARCHAR" property="employeeInstruct" />
    <result column="EMPLOYEE_USEFUL_TIME" jdbcType="TIMESTAMP" property="employeeUsefulTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMPLOYEE_ID, DEPARTMENT_ID_EMPLOYEE, USERROLE_ID_EMPLOYEE, EMPLOYEE_USERNAME, EMPLOYEE_PASSWORD, 
    EMPLOYEE_NUMBER, EMPLOYEE_REAL_NAME, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, EMPLOYEE_INIT, 
    EMPLOYEE_INSTRUCT, EMPLOYEE_USEFUL_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.com.noomn.po.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.noomn.po.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.noomn.po.Employee">
    insert into employee (EMPLOYEE_ID, DEPARTMENT_ID_EMPLOYEE, 
      USERROLE_ID_EMPLOYEE, EMPLOYEE_USERNAME, EMPLOYEE_PASSWORD, 
      EMPLOYEE_NUMBER, EMPLOYEE_REAL_NAME, EMPLOYEE_EMAIL, 
      EMPLOYEE_PHONE, EMPLOYEE_INIT, EMPLOYEE_INSTRUCT, 
      EMPLOYEE_USEFUL_TIME)
    values (#{employeeId,jdbcType=VARCHAR}, #{departmentIdEmployee,jdbcType=VARCHAR}, 
      #{userroleIdEmployee,jdbcType=VARCHAR}, #{employeeUsername,jdbcType=VARCHAR}, #{employeePassword,jdbcType=VARCHAR}, 
      #{employeeNumber,jdbcType=VARCHAR}, #{employeeRealName,jdbcType=VARCHAR}, #{employeeEmail,jdbcType=VARCHAR}, 
      #{employeePhone,jdbcType=VARCHAR}, #{employeeInit,jdbcType=INTEGER}, #{employeeInstruct,jdbcType=VARCHAR}, 
      #{employeeUsefulTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.noomn.po.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="departmentIdEmployee != null">
        DEPARTMENT_ID_EMPLOYEE,
      </if>
      <if test="userroleIdEmployee != null">
        USERROLE_ID_EMPLOYEE,
      </if>
      <if test="employeeUsername != null">
        EMPLOYEE_USERNAME,
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD,
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER,
      </if>
      <if test="employeeRealName != null">
        EMPLOYEE_REAL_NAME,
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL,
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE,
      </if>
      <if test="employeeInit != null">
        EMPLOYEE_INIT,
      </if>
      <if test="employeeInstruct != null">
        EMPLOYEE_INSTRUCT,
      </if>
      <if test="employeeUsefulTime != null">
        EMPLOYEE_USEFUL_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentIdEmployee != null">
        #{departmentIdEmployee,jdbcType=VARCHAR},
      </if>
      <if test="userroleIdEmployee != null">
        #{userroleIdEmployee,jdbcType=VARCHAR},
      </if>
      <if test="employeeUsername != null">
        #{employeeUsername,jdbcType=VARCHAR},
      </if>
      <if test="employeePassword != null">
        #{employeePassword,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeRealName != null">
        #{employeeRealName,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeInit != null">
        #{employeeInit,jdbcType=INTEGER},
      </if>
      <if test="employeeInstruct != null">
        #{employeeInstruct,jdbcType=VARCHAR},
      </if>
      <if test="employeeUsefulTime != null">
        #{employeeUsefulTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.noomn.po.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeId != null">
        EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentIdEmployee != null">
        DEPARTMENT_ID_EMPLOYEE = #{record.departmentIdEmployee,jdbcType=VARCHAR},
      </if>
      <if test="record.userroleIdEmployee != null">
        USERROLE_ID_EMPLOYEE = #{record.userroleIdEmployee,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeUsername != null">
        EMPLOYEE_USERNAME = #{record.employeeUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePassword != null">
        EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null">
        EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeRealName != null">
        EMPLOYEE_REAL_NAME = #{record.employeeRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEmail != null">
        EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeInit != null">
        EMPLOYEE_INIT = #{record.employeeInit,jdbcType=INTEGER},
      </if>
      <if test="record.employeeInstruct != null">
        EMPLOYEE_INSTRUCT = #{record.employeeInstruct,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeUsefulTime != null">
        EMPLOYEE_USEFUL_TIME = #{record.employeeUsefulTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      DEPARTMENT_ID_EMPLOYEE = #{record.departmentIdEmployee,jdbcType=VARCHAR},
      USERROLE_ID_EMPLOYEE = #{record.userroleIdEmployee,jdbcType=VARCHAR},
      EMPLOYEE_USERNAME = #{record.employeeUsername,jdbcType=VARCHAR},
      EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_REAL_NAME = #{record.employeeRealName,jdbcType=VARCHAR},
      EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_INIT = #{record.employeeInit,jdbcType=INTEGER},
      EMPLOYEE_INSTRUCT = #{record.employeeInstruct,jdbcType=VARCHAR},
      EMPLOYEE_USEFUL_TIME = #{record.employeeUsefulTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.noomn.po.Employee">
    update employee
    <set>
      <if test="departmentIdEmployee != null">
        DEPARTMENT_ID_EMPLOYEE = #{departmentIdEmployee,jdbcType=VARCHAR},
      </if>
      <if test="userroleIdEmployee != null">
        USERROLE_ID_EMPLOYEE = #{userroleIdEmployee,jdbcType=VARCHAR},
      </if>
      <if test="employeeUsername != null">
        EMPLOYEE_USERNAME = #{employeeUsername,jdbcType=VARCHAR},
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeRealName != null">
        EMPLOYEE_REAL_NAME = #{employeeRealName,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeInit != null">
        EMPLOYEE_INIT = #{employeeInit,jdbcType=INTEGER},
      </if>
      <if test="employeeInstruct != null">
        EMPLOYEE_INSTRUCT = #{employeeInstruct,jdbcType=VARCHAR},
      </if>
      <if test="employeeUsefulTime != null">
        EMPLOYEE_USEFUL_TIME = #{employeeUsefulTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.noomn.po.Employee">
    update employee
    set DEPARTMENT_ID_EMPLOYEE = #{departmentIdEmployee,jdbcType=VARCHAR},
      USERROLE_ID_EMPLOYEE = #{userroleIdEmployee,jdbcType=VARCHAR},
      EMPLOYEE_USERNAME = #{employeeUsername,jdbcType=VARCHAR},
      EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_REAL_NAME = #{employeeRealName,jdbcType=VARCHAR},
      EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_INIT = #{employeeInit,jdbcType=INTEGER},
      EMPLOYEE_INSTRUCT = #{employeeInstruct,jdbcType=VARCHAR},
      EMPLOYEE_USEFUL_TIME = #{employeeUsefulTime,jdbcType=TIMESTAMP}
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
</mapper>