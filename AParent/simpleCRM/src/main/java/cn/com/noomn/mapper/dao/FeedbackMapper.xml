<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.noomn.mapper.dao.FeedbackMapper">
  <resultMap id="BaseResultMap" type="cn.com.noomn.po.Feedback">
    <id column="FEEDBACK_ID" jdbcType="VARCHAR" property="feedbackId" />
    <result column="TASK_ID" jdbcType="VARCHAR" property="taskId" />
    <result column="FOLLOW_EMPLOYEE_ID_FEEDBACK" jdbcType="VARCHAR" property="followEmployeeIdFeedback" />
    <result column="FEEDBACK_DETAIL" jdbcType="VARCHAR" property="feedbackDetail" />
    <result column="FEEDBACK_TIME" jdbcType="TIMESTAMP" property="feedbackTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FEEDBACK_ID, TASK_ID, FOLLOW_EMPLOYEE_ID_FEEDBACK, FEEDBACK_DETAIL, FEEDBACK_TIME
  </sql>
  <select id="selectByExample" parameterType="cn.com.noomn.po.FeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from feedback
    where FEEDBACK_ID = #{feedbackId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from feedback
    where FEEDBACK_ID = #{feedbackId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.noomn.po.FeedbackExample">
    delete from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.noomn.po.Feedback">
    insert into feedback (FEEDBACK_ID, TASK_ID, FOLLOW_EMPLOYEE_ID_FEEDBACK, 
      FEEDBACK_DETAIL, FEEDBACK_TIME)
    values (#{feedbackId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{followEmployeeIdFeedback,jdbcType=VARCHAR}, 
      #{feedbackDetail,jdbcType=VARCHAR}, #{feedbackTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.noomn.po.Feedback">
    insert into feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackId != null">
        FEEDBACK_ID,
      </if>
      <if test="taskId != null">
        TASK_ID,
      </if>
      <if test="followEmployeeIdFeedback != null">
        FOLLOW_EMPLOYEE_ID_FEEDBACK,
      </if>
      <if test="feedbackDetail != null">
        FEEDBACK_DETAIL,
      </if>
      <if test="feedbackTime != null">
        FEEDBACK_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackId != null">
        #{feedbackId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="followEmployeeIdFeedback != null">
        #{followEmployeeIdFeedback,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDetail != null">
        #{feedbackDetail,jdbcType=VARCHAR},
      </if>
      <if test="feedbackTime != null">
        #{feedbackTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.noomn.po.FeedbackExample" resultType="java.lang.Integer">
    select count(*) from feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update feedback
    <set>
      <if test="record.feedbackId != null">
        FEEDBACK_ID = #{record.feedbackId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.followEmployeeIdFeedback != null">
        FOLLOW_EMPLOYEE_ID_FEEDBACK = #{record.followEmployeeIdFeedback,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackDetail != null">
        FEEDBACK_DETAIL = #{record.feedbackDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackTime != null">
        FEEDBACK_TIME = #{record.feedbackTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update feedback
    set FEEDBACK_ID = #{record.feedbackId,jdbcType=VARCHAR},
      TASK_ID = #{record.taskId,jdbcType=VARCHAR},
      FOLLOW_EMPLOYEE_ID_FEEDBACK = #{record.followEmployeeIdFeedback,jdbcType=VARCHAR},
      FEEDBACK_DETAIL = #{record.feedbackDetail,jdbcType=VARCHAR},
      FEEDBACK_TIME = #{record.feedbackTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.noomn.po.Feedback">
    update feedback
    <set>
      <if test="taskId != null">
        TASK_ID = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="followEmployeeIdFeedback != null">
        FOLLOW_EMPLOYEE_ID_FEEDBACK = #{followEmployeeIdFeedback,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDetail != null">
        FEEDBACK_DETAIL = #{feedbackDetail,jdbcType=VARCHAR},
      </if>
      <if test="feedbackTime != null">
        FEEDBACK_TIME = #{feedbackTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where FEEDBACK_ID = #{feedbackId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.noomn.po.Feedback">
    update feedback
    set TASK_ID = #{taskId,jdbcType=VARCHAR},
      FOLLOW_EMPLOYEE_ID_FEEDBACK = #{followEmployeeIdFeedback,jdbcType=VARCHAR},
      FEEDBACK_DETAIL = #{feedbackDetail,jdbcType=VARCHAR},
      FEEDBACK_TIME = #{feedbackTime,jdbcType=TIMESTAMP}
    where FEEDBACK_ID = #{feedbackId,jdbcType=VARCHAR}
  </update>
</mapper>